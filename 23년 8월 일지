[2023. 08. 23. 수요일 12:58]
2주 동안 객체지향까지 봤는데 아직 돌아서면 까먹는 기본 개념들이 많다. 
내가 우리 기수에서 진도가 제일 느린 것 같지만 그만큼 다른 사람들은 이미 출발선이 앞에 있고 그만큼 노력했기 때문에 절대 그들과 나를 비교하지 말자.
나는 나대로 기초를 견고히 하고, 내 속도대로 천천히 실력을 쌓아 올리면 된다.
난 아직 젊으니까 괜찮아 ~!~!~!~! 스트레스 받으면 맛있는 것도 먹고, 최대한 모든 것에 행복함 느끼기 ! 긍정적으로 생각하기 !!! 산책하기 ~!~!

  목표 : 
        1. 중요한 개념은 계속 외우기 (객체지향 특징, 오버로딩 특징, 오버라이딩 특징, 다형성 특징, 생성자 조건 등)
        2. 코드를 작성할 때, 그림이나 코드 전개과정을 글로 적는 연습을 하자.
        3. 자바의 정석 안 예제는 결과값만 봐도 로직 전개과정 적고 코드 짤 수 있도록 외우자.
        4. 진도가 상당히 뒤쳐지고 있기 때문에 부족한 부분은 자야할 시간에, 통학 시간을 적극 활용하자. 
        5. 남과 비교하지 말자. 근데 7기에서 끝내자 ! 절대 8기 다음기수로 넘어갈 수 없어 ㅜㅜ 
        6. 응용 문제 한번에 못풀어도 괜찮다. 기초 튼튼히 !
        7. ** 이번주 일요일까지 CH07. 객체지향2 까지는 자바의 정석 개념 + 예제 완벽하게 달달 외우기 !
          
-CH02. 변수
  : (진법) 진법 중에서 이제 2진법을 8진법이나 16진법으로 바꾸는 방법는 알겠는데
    2의 보수법 개념이 너무 어렵고, 진법의 실질적인 현업에서의 쓰임이 어떻게 되는지 궁금하고 잘 모르겠다.
    하지만 진법을 변환하거나 계산하는게 나름 재미있다. 나중에 선형대수나 2진법 관련 개념을 더 깊게 공부할 때 다시 살펴봐야겠다.
    (변수) char, int, byte 등의 허용되는 범위는 외웠는데 대략적인 숫자만 외웠고, 정말 구체적인 자리까지는 외우지 못했다.
    대충 int type의 범위는 +- 20억 정도 된다는 정도만 알고 있다. 
    (변수 2) 기본값, scanner, 상수와 리터럴, 변수 명명규칙 등의 개념은 이제 질릴 정도로 외워서 자신 있으나
    각 type의 범위까지 고려해서 연산 진행 코드를 짜야 한다는 것이 아직은 익숙하지 않다.
    대충 int, long, double 정도를 많이 쓴다고 해도, 각자 메모리의 차이나 컴퓨터 성능을 고려해서 type 하나하나 고려해야 하는 순간도
    있을 수 있기에 조금 더 디테일하고 구체적인 부분까지 생각할 줄 아는 사람이 되어야겠다.

-CH03. 연산자
  : (우선순위) 연산자의 우선순위는 구체적인건 아직 암기는 안했고, 대략적인 우선순위는 알고 있다.
    (연산자) 삼항 연산자, 증감 연산자가 해석하고 쓰기에 익숙하지 않아서 어려운 것 같다.
    특히 if문을 삼항 연산자로 바꾸려는 시도를 생각하는 것이 익숙하지 않아서 생각하지 않게 되고,
    증감 연산자는 어떨 때 ++i를 쓰는지, i++를 써야 하는지 감이 잘 오지 않는다.
    해당 부분은 i가 어떤 숫자일 때 결과값이 어떤 식으로 나오는지 연습을 계속 해봐야겠다.

-CH04. 조건문과 반복문
  : (조건문, 반복문) 어떨 때 if와 switch를 쓰고, for / while / do-while을 대략적으로 어떨 때 사용하면 좋은지는 알고 있다.
    (for - while) 이 둘은 대부분 교환이 가능하므로, for 코드를 while문으로 바꿔보는 식으로의 연습이 더 필요할 것 같다.
    그냥 코드를 쓰는 것보다 이 코드의 로직이 어떤지, 전개 과정은 어떤 식으로 가면 좋은지 그림을 그리고 전개과정을 적어서
    그걸 토대로 그냥 프로그램 언어로 작성을 쭉 하는 것이 맞는 방법인 것 같다. 이 연습을 하자 !
    조건문이나 반복문을 사용할 때, 어떻게 더 간결하게 쓸 수 있는지 고민해보고, 삼항 연산자도 너무 복잡하지 않은 선에서 사용해보도록 하자.
    -> 다양한 예제와 연습문제로 기본기를 조금 더 튼튼히 다룰 것. 특히 자바의 정석에 있는 예제는 결과값만 보고서라도 작성할 수 있을 정도로 외울 것.

-CH05. 배열
  : (배열 응용) 아 아직 너무 어렵다. 빙고 게임이라든가, x와 y 좌표를 받아서 표시하는 게임이라든가, 이런 응용 예제가 어렵지만 할 수 있다 !
    어려우면 익숙해질때까지, 외울때까지 반복 또 반복 !
    (가변 배열) 가변 배열을 어떨 때 사용하는지에 대한 쓰임을 잘 모르겠다. 예제를 더 찾아보자.

-CH06. 객체지향 1
  : 그래.. 이젠 재밌어... 이젠 오버로딩의 개념과 특징도 달달 외웠다. 하지만 아직 예제에 대한 익숙함이 부족하다. 
    (참조변수와 인스턴스의 관계 그림으로 설명하기) 클래스 타입의 참조변수가 인스턴스를 참조하는 과정을 그림으로 설명하고, 용어들을 정확히 말하는게
    조금 어려웠고 정리도 잘 되지 않았지만 이제는 하도 연습해서 칠판에 그림 그려놓고 설명할 수 있다. 내일 조교님한테 검사받아야지 !!! 너무 자신있음 !!
    그리고 그거 그림으로 설명하는게 내가 이젠 그 과정을 이해했고, 어느정도 설명 가능할만큼 아니까 재밌다 !
    (재귀호출) 어떨 때 이 메서드를 사용하는지 관련한 예제에 대한 숙지가 잘 안되어 있다. 본인 자신을 호출한다는 개념이란건 알겠는데
    이게 어떨 때 사용하는건지, 주의할 점은 조건문을 반드시 사용해야 한다는데 이 조건문을 어떻게 작성해야 하는지에 대해서 익숙해질 필요가 있다.
    (static - instance) 어떨 때 cv와 iv를 사용하는지에 대해 익숙하지 않다. 개념은 알고 있지만 이 둘을 완벽하게 구분하여 사용할 수 있어야 할 것 같다.
    (생성자) 인스턴스 변수를 초기화할 때 주로 사용한다는 개념 자체는 외워서 알지만, 정확히 생성자가 이 코드 로직에 왜 필요하고, 어떻게 쓸 수 있을 것인지
    이 부분을 많이 고민해봐야 할 것 같다. 익숙하지 않아서 아직 뭘 모름.
    (참조변수 this) 인스턴스 자기 자신을 가리키는 참조변수라는건 알겠는데 아직 개념이 명확하게 서질 않는다. 대체 뭐하는 양반인지 개념 정립할 필요가 있음.

-CH07. 객체지향 2
  : 사실 코드를 로직에 따라서 과정을 쭉 글로 나열하고 정리하면서 어떤 코드가 중복될 것 같으니 상속을 이용하고 이런 부분이 시간을 더 할애할 것 같다는
    생각이 어렴풋이 들었다. 생각보다 코드 뚱땅 치는 것 보다는 내 생각을 정리하고 논리적이며 간결하게 표현한다는게 훨씬 어려울 것 같음.
    내가 지금 상속 파트를 배우고 있어서 상속 예제를 풀고 있다지만, 실제 코드를 작성할 때 상속을 사용하자는 생각을 할 수 있을까?
    (상속) 상속과 포함 관계에 대한 정의는 알고 있지만 둘을 구분지어 어떨 때 사용하는지에 대한 익숙함은 필요해보임.
    (오버라이딩) 개념은 안다. 하지만 super() 부분이 어렵다. 정의는 알지만 코드 작성과 응용에 대한 것들에는 여전히 익숙하지 않다.
    (제어자) abstract 정말 뭔 말인지 하나도 모르겠다. 대체 어떨 때 쓰는겨? 이해 될 때까지 조교님한테 질문하고 책 봐야징
    (다형성, 추상클래스, 인터페이스) 이것도 마찬가지. 
    (내부 클래스, 익명 클래스) 사실 예제 푸는건 난이도가 나쁘지 않지만 예제가 아닌 실제 코드에서 이를 해당 클래스도 변형시켜야 될 필요성을 구분하는 것과
    실제 변형시키는 것이 너무 와닿지가 않는다. 

🐤
[2023. 08. 23. 수요일 14:42]
오늘 자바의 정석 CH06 ~ CH07. 객체지향 연습문제 검사 받았다. 원장님한테 칭찬 들음 !! 문제 푸는 방식이 좋다고 하셨다.
그림도 그리고, 코드마다 분석도 하고, 알고 있는 개념들 그냥 문제 주변에 다 적고, 문제 로직 과정 간단히 적었는데 이 풀이 방식이 좋은 방법인가보다.
아직 진도가 정말 느리지만 이번주만 좀 죽어나가면..? 기초는 튼튼하게 금방 수업 진도까지 따라잡을 수 있을 것 같다.
조급해하지 말자. 한 번 공부하는데 완벽하고 확실하게 공부해서 최대한 듬성듬성 비어있는 개념이 없도록 하자.
오늘 CH08. 예외처리 나가고 있는데 난 아직 이론은 CH07. 객체지향 다형성까지 공부했다. 오늘 CH07까지 이론 다 끝내고, 최대한 예제도 끝냈으면 좋겠는데..
원장님께 증감 연산자랑 유효성 관련해서 푸념?을 조금 했는데 증감 연산자는 쉬운 방식부터 (i = i+1;) 작성해보고나서 전위든 후위든 고쳐보고,
만약 전위로 했는데 결과값이 이상하다면 후위로 바꾸고 그런 식으로 단순하게 생각하라고 하셨다.
유효성도 마찬가지. 코드 계속 테스트해보고 경우의 수 생각하면 된다. 이건 코드 생각하고 로직 짜는게 익숙해지면 점차 실력이 올라가는 부분 같다.
장어덮밥 먹었는데 진짜 맛있었다. 친구랑 연유라떼 1+1 행사하는거 마셨는데 달달해서 잠오지만 안자고 공부했음 ! 그랬더니 이젠 아까처럼 막 졸리지 않다.
어제 학원 친구들이랑 광장시장까지 20분 동안 걸어가서 빈대떡이랑 떡볶이 저녁으로 먹었는데 진짜 낭만있고 맛있었다. 
너무 좋은 친구들이랑 같이 7기 끝까지 함께하고 싶어서 뒤쳐지지 않으려고 열심히 공부하게 된다. 
주변 친구들이 나에게 좋은 영향을 주는 것 같아서 기쁘다 !! 😎👍 8기 갈 수 업성 !!!! 곧 다음주가 월말평가지만 엄청 어렵지 않을 것 같다. 자바의 정석만 제대로 하면 돼 !!

  목표 : 
        1. 이론 CH07. 객체지향2까지 오늘 다 정리하고 어느정도 암기하기
        2. 예제 CH06. 객체지향1까지 끝내고 주의깊게 봐야 할 예제나 익숙해지고 싶은 예제 표시하기
        3. 예제 CH05. 배열 예제 중 아직 풀지 못한 예제(응용 문제) 중 하나 완벽히 이해하기
        4. 다른 사람들이 실습에 강하면 나는 예제풀이랑 퀴즈 외우고, 이론 달달달 외워서 자바의 정석을 마스터 하겠따 !
        5. 밤.. 새고 싶은데 진짜 잠에 약해서 쌩으로 밤새는건 포기하고, 대신 3-4시간만 자고 공부하자 !
        6. 이론 외우는 시간은 이제 점차 따로 시간 할애한다기보다는 최대한 자투리 시간 이용하기 ! (통학 시간, 혼자 밥먹는 시간 등)
        7. 긍정적으로 살자 ! 항상 작은 것에도 행복하자 ! 
        8. 할 게 정말 산더미지만 어째됐든 할 수 있다 ! 잠을 덜 자면 되지 ~~~ 이론, 예제, 연습문제, 원장님 퀴즈.. 특히 퀴즈가 정말 어려움

  -TDD(반복 테스트) : 다양한 예외 사항과 다양한 입력값이 존재하므로, TDD가 중요하다. 근데 이거 어떻게 하는건데... 강의 찾아봐서 듣고, 물어봐야지
  -원장님 퀴즈 : 진짜 CH04. 조건문과 반복문까지만 제대로 풀고 나머진 다 모르겠다. 일단 깃허브에 적어놨으니까 계속 풀어봐야지.. 특히 7장 퀴즈 정말 어려워
              그래도 내가 쓴 답이 잘 출력되면 세상 행복하다구 ......... !!!!!!!!
